# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021-2025, LVGL Kft
# This file is distributed under the same license as the LVGL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LVGL 9.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-20 00:24+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:5
msgid "Coding Style"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:8
msgid "File Template"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:10
msgid "Use `misc/lv_templ.c <https://github.com/lvgl/lvgl/blob/master/src/misc/lv_templ.c>`__ and `misc/lv_templ.h <https://github.com/lvgl/lvgl/blob/master/src/misc/lv_templ.h>`__"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:15
msgid "Naming Conventions"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:17
msgid "Words are separated by '\\_'"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:18
msgid "In variable and function names use only lower case letters (e.g. *height_tmp*)"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:20
msgid "In enums and defines use only upper case letters (e.g. *MAX_LINE_NUM*)"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:22
msgid "Global names (API):"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:24
msgid "start with *lv*"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:25
msgid "followed by module name: *button*, *label*, *style* etc."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:26
msgid "followed by the action (for functions): *set*, *get*, etc."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:27
msgid "closed with the subject: *name*, *size*, *state* etc."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:29
msgid "Typedefs"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:31
msgid "prefer ``typedef struct`` and ``typedef enum`` instead of ``struct name`` and ``enum name``"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:33
msgid "always end ``typedef struct`` and ``typedef enum`` type names with ``_t``"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:36
msgid "Abbreviations:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:38
msgid "The following abbreviations are used and allowed:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:40
msgid "``dsc`` descriptor"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:41
msgid "``param`` parameter"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:42
msgid "``indev`` input device"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:43
msgid "``anim`` animation"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:44
msgid "``buf``  buffer"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:45
msgid "``str`` string"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:46
msgid "``min/max`` minimum/maximum"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:47
msgid "``alloc`` allocate"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:48
msgid "``ctrl`` control"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:49
msgid "``pos`` position"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:51
msgid "Avoid adding new abbreviations"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:55
msgid "Coding Guide"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:57
msgid "Editor:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:59
msgid "Set editor to use 4 spaces for tab indentations (instead of tab characters)."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:60
msgid "Exception:  the **Kconfig** file and any make files require leading tab characters on child items."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:63
msgid "Functions:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:65
msgid "Write functions that use the single-responsibility principle."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:66
msgid "Make functions ``static`` when not part of that object's public API (where possible)."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:68
msgid "Variables:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:70
msgid "One line, one declaration (BAD: char x, y;)."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:71
msgid "Use ``<stdint.h>`` (*uint8_t*, *int32_t* etc)."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:72
msgid "Declare variables where needed (not all at function start)."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:73
msgid "Use the smallest required scope."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:74
msgid "Variables in a file (outside functions) are always *static*."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:75
msgid "Do not use global variables (use functions to set/get static variables)."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:79
msgid "Comments"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:81
msgid "Before every function prototype in ``.h`` files, include a Doxygen-formatted comment like this:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:97
msgid "The normal comment prefix ``/**`` causes the comment to document the code member *after* the comment.  When documenting a code member that is *before* the comment, such as a struct member, use ``/**<`` like this:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:113
msgid "When commenting code, use block comments like this ``/* Description */``, not end-of-line comments like this ``// Description``."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:116
msgid "Include a space after the ``/*`` or ``/**<`` and before the ``*/`` for improved readability."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:118
msgid "Write readable code to avoid descriptive comments like:  ``x++; /* Add 1 to x */``."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:120
msgid "The code should show clearly what you are doing."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:122
msgid "You should write **why** you did it:  ``x++;  /* Point to closing '\\0' of string */``"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:124
msgid "Short \"code summaries\" of a few lines are accepted: ``/* Calculate new coordinates */``"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:126
msgid "In comments use back-quotes (\\`...\\`) when referring to a code element, such as a variable, type, or struct name: ``/* Update value of `x_act` */``"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:129
msgid "When adding or modifying comments, priorities are (in order of importance):"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:131
msgid "clarity (the ease with which other programmers can understand your intention),"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:132
msgid "readability (the ease with which other programmers can read your comments),"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:133
msgid "brevity (the quality of using few words when speaking or writing)."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:135
msgid "Blank lines within comments are desirable when they improve clarity and readability."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:137
msgid "Remember, when you are writing source code, you are not just teaching the computer what to do, but also teaching other programmers how it works, not only users of the API, but also future maintainers of your source code.  Comments add information about what you were thinking when the code was written, and **why** you did things that way---information that cannot be conveyed by the source code alone."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:145
msgid "Doxygen Comment Specifics"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:146
msgid "Doxygen is the first program in a chain that generates the online LVGL API documentation from the files in the LVGL repository.  Doxygen detects files it should pay attention to by them having a ``@file`` command inside a Doxygen comment.  Doxygen comments begin with a leading ``/**``.  It ignores comments that do not have exactly two ``*``."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:152
msgid "The following is an illustration of an API function prototype with documentation illustrating most of the Doxygen commands used in LVGL."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:184
msgid "Always start Doxygen comment with a brief description of the code element it documents."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:186
msgid "When more detail is needed, add a blank line below the brief description and add additional information that may be needed by LVGL API users, including preconditions for calling the function.  Doxygen needs the blank line to separate \"brief\" from \"detail\" portions of the description."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:191
msgid "Describe function parameters with the ``@param`` command.  When a function writes to the address contained by a pointer parameter, if not already obvious (e.g. when the parameter name contains the word \"out\"), include the direction in the command for clarity:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:196
msgid "``@param[out]  param_name     description``."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:198
msgid "Describe return values with the ``@return`` command."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:200
msgid "Add at least 2 spaces after Doxygen commands for improved readability."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:202
msgid "Use back-quotes (\\`...\\`) around code elements (variables, type names, function names).  For type names and function names, Doxygen generates a hyperlink to that code member's documentation (when it exists) with or without the single back-quotes."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:206
msgid "Append empty \"()\" to function names.  Doxygen will not generate a hyperlink to the function's documentation without this."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:209
msgid "Use proper grammar for clarity.  Descriptions of parameters do not need periods after them unless they are full sentences."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:212
msgid "Align edges of text around lists of parameters for ease of reading."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:214
msgid "Lists (e.g. of accepted parameter values) can be created by using the '-' character. If the list needs to be numbered, numbers can also be used."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:217
msgid "Place example code in a code block by surrounding it with ``@code{.c}`` and ``@endcode`` commands. Doxygen doesn't need the ``{.c}`` part, but the downstream software does."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:220
msgid "Refer reader to additional information using the ``@see`` command.  Doxygen adds a \"See also\" paragraph.  The text following the ``@see`` command will be indented."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:223
msgid "If you create a new pair of ``.c`` and ``.h`` files (e.g. for a new driver), ensure a Doxygen comment like this is at the top of each new file.  Doxygen will not parse the file without the ``@file`` command being present."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:236
msgid "Supported Doxygen Commands"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:237
msgid "``@file`` tells Doxygen to parse this file and also supplies documentation about the file itself when applicable (everything following it in the same comment)."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:240
msgid "``@param  name  description`` documents ``name`` as a function parameter, and ``description`` is the text that follows it until Doxygen encounters a blank line or another Doxygen command."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:243
msgid "``@return  description`` documents the return value until Doxygen encounters a blank line or another Doxygen command."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:245
msgid "``@code{.c}/@endcode`` surrounds code that should be placed in a code block.  While Doxygen knows to use C color-coding of code blocks in a .C file, the downstream part of the documentation generation sequence does not, so the ``{.c}`` appendage to the ``@code`` command is necessary."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:250
msgid "``@note  text`` starts a paragraph where a note can be entered.  The note ends with a blank line, the end of the comment, or another Doxygen command that starts a new section. If the note contains more than one paragraph, additional paragraphs can be added by using additional ``@note`` commands.  At this writing, ``@par`` commands do not add additional paragraphs to notes as indicated in the Doxygen documentation."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:256
msgid "``@see  text`` generates a \"See also\" paragraph in a highlighted section, helpful when additional information about a topic can be found elsewhere."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:262
msgid "API Conventions"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:264
msgid "To support the auto-generation of bindings, the LVGL C API must follow some coding conventions:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:267
msgid "Use ``enum``\\ s instead of macros. If inevitable to use ``define``\\ s export them with :cpp:expr:`LV_EXPORT_CONST_INT(defined_value)` right after the ``define``."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:269
msgid "In function arguments use ``type name[]`` declaration for array parameters instead of :cpp:expr:`type * name`"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:270
msgid "Use typed pointers instead of :cpp:expr:`void *` pointers"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:271
msgid "Widget constructor must follow the ``lv_<widget_name>_create(lv_obj_t * parent)`` pattern."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:272
msgid "Widget members function must start with ``lv_<widget_name>`` and should receive :cpp:expr:`lv_obj_t *` as first argument which is a pointer to Widget object itself."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:274
msgid "``struct`` APIs should follow the widgets' conventions. That is to receive a pointer to the ``struct`` as the first argument, and the prefix of the ``struct`` name should be used as the prefix of the function name as well (e.g. :cpp:expr:`lv_display_set_default(lv_display_t * disp)`)"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:277
msgid "Functions and ``struct``\\ s which are not part of the public API must begin with underscore in order to mark them as \"private\"."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:278
msgid "Argument must be named in H files as well."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:279
msgid "Do not ``malloc`` into a static or global variables. Instead declare the variable in ``lv_global_t`` structure in ``lv_global.h`` and mark the variable with :cpp:expr:`(LV_GLOBAL_DEFAULT()->variable)` when it's used."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:281
msgid "To register and use callbacks one of the following needs to be followed."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:283
msgid "Pass a pointer to a ``struct`` as the first argument of both the registration function and the callback. That ``struct`` must contain ``void * user_data`` field."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:285
msgid "The last argument of the registration function must be ``void * user_data`` and the same ``user_data`` needs to be passed as the last argument of the callback."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:289
msgid "To learn more refer to the documentation of `MicroPython <integration/bindings/micropython>`__."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:293
msgid "Formatting"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:295
msgid "Here is example to show bracket placement and use of white space:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:324
msgid "You can use **astyle** to format the code. Run ``code-format.py`` from the ``scripts`` folder."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:329
msgid "Includes"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:331
msgid "Various subsystems of LVGL can be enabled or disabled by setting a macro in ``lv_conf.h`` to 1 or 0 respectively.  The code files that contain the logic for those subsystems are often arranged so that there is an ``#if <ENABLING_MACRO_NAME>`` directive near the top of the file, and its matching ``#endif`` is at the end of the file.  If you add or modify such a subsystem in LVGL, whenever possible, the only ``#include`` that should be above those conditional directives should be just enough to include the enabling/disabling macro.  Specifically:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:339
msgid "in the ``.c`` file:  the ``#include`` that includes the header with the closest correspondence to that ``.c`` file"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:342
msgid "in the mated ``.h`` file:  ``#include \"lv_conf_internal.h\"``"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:344
msgid "which, itself includes ``lv_conf.h``.  See examples at `lv_freetype.c <https://github.com/lvgl/lvgl/blob/master/src/libs/freetype/lv_freetype.c>`__, `lv_freetype_private.h <https://github.com/lvgl/lvgl/blob/master/src/libs/freetype/lv_freetype_private.h>`__ and `lv_freetype.h <https://github.com/lvgl/lvgl/blob/master/src/libs/freetype/lv_freetype.h>`__."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:351
msgid "pre-commit"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:353
msgid "`pre-commit <https://pre-commit.com/>`__ is a multi-language package manager for pre-commit hooks. See the `installation guide <https://pre-commit.com/#installation>`__ to get pre-commit python package installed into your development machine."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:358
msgid "Once you have ``pre-commit`` installed you will need to `set up the git hook scripts <https://pre-commit.com/#3-install-the-git-hook-scripts>`__ with:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:366
msgid "now ``pre-commit`` will run automatically on ``git commit``!"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:370
msgid "Hooks"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:372
msgid "The ``format-source`` local hook (see ``.pre-commit-config.yaml``) runs **astyle** on all the staged source and header files (that are not excluded, see ``exclude`` key of the hook configuration) before entering the commit message, if any file gets formatted by **astyle** you will need to add the change to the staging area and run ``git commit`` again."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:378
msgid "The ``trailing-whitespace`` hook fixes trailing whitespaces on all of the files."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:383
msgid "Skipping hooks"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:385
msgid "If you want to skip any particular hook you can do so with:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:393
msgid "Testing hooks"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/coding_style.rst:395
msgid "It is not necessary to do a commit to test the hooks, you can test hooks by adding the files into the staging area and run:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:5
msgid "Developer Certification of Origin (DCO)"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:8
msgid "Overview"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:10
msgid "To ensure all licensing criteria are met for every repository of the LVGL project, we apply a process called DCO (Developer's Certificate of Origin)."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:14
msgid "The text of DCO can be read here: https://developercertificate.org/."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:16
msgid "By contributing to any repositories of the LVGL project you agree that your contribution complies with the DCO."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:19
msgid "If your contribution fulfills the requirements of the DCO, no further action is needed. If you are unsure feel free to ask us in a comment, e.g. in your submitted :ref:`Pull Request <contributing_pull_requests>`."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:26
msgid "Accepted Licenses and Copyright Notices"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:28
msgid "To make the DCO easier to digest, here are some practical guides about specific cases:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:32
msgid "Your own work"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:34
msgid "The simplest case is when the contribution is solely your own work. In this case you can just send a Pull Request without worrying about any licensing issues."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:39
msgid "Using code from an online source"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:41
msgid "If the code you would like to add is based on an article, post or comment on a website (e.g. StackOverflow) the license and/or rules of that site should be followed."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:45
msgid "For example in case of StackOverflow a notice like this can be used:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:59
msgid "Using MIT-licensed code"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:61
msgid "As LVGL is MIT licensed, other MIT licensed code can be integrated without issues. The MIT license requires a copyright notice be added to the derived work. Any derivative work based on MIT licensed code must copy the original work's license file or text."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:67
msgid "Use GPL-licensed code"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/dco.rst:69
msgid "The GPL license is not compatible with the MIT license. Therefore, LVGL cannot accept GPL licensed code."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/index.rst:5
msgid "Contributing"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/introduction.rst:5
msgid "Introduction"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/introduction.rst:7
msgid "Join LVGL's community and leave your footprint in the library!"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/introduction.rst:9
msgid "There are a lot of ways to contribute to LVGL even if you are new to the library or even new to programming."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/introduction.rst:12
msgid "It might be scary to make the first step but you have nothing to be afraid of. A friendly and helpful community is waiting for you. Get to know like-minded people and make something great together."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/introduction.rst:16
msgid "So let's find which contribution option fits you the best and helps you join the development of LVGL!"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:5
msgid "Pull Requests"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:7
msgid "Merging new code into the ``lvgl/lvgl`` and other repositories happens via *Pull Requests* (PR for short). A PR is a notification like \"Hey, I made some updates to your project. Here are the changes, you can add them if you want.\" To do this you need a copy (called fork) of the original project under your account, make some changes there, and notify the original repository about your updates. You can see what it looks like on GitHub for LVGL here: https://github.com/lvgl/lvgl/pulls."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:16
msgid "To add your changes you can edit files online on GitHub and send a new Pull request from there (recommended for small changes) or add the updates in your favorite editor/IDE and use ``git`` to publish the changes (recommended for more complex updates)."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:24
msgid "From GitHub"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:26
msgid "Navigate to the file you want to edit."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:27
msgid "Click the Edit button in the top right-hand corner."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:28
msgid "Add your changes to the file."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:29
msgid "Add a commit message at the bottom of the page."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:30
msgid "Click the *Propose changes* button."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:35
msgid "From Your Local Workstation"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:37
msgid "These instructions describe the main ``lvgl`` repository but it works the same way any remote Git repository."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:40
msgid "Fork the `lvgl repository <https://github.com/lvgl/lvgl>`__. To do this click the \"Fork\" button in the top right corner. It will \"copy\" the ``lvgl`` repository to your GitHub account (``https://github.com/<YOUR_NAME>?tab=repositories``)"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:43
msgid "Clone your forked repository."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:44
msgid "Add your changes. You can create a *feature branch* from the ``master`` branch for the updates: ``git checkout -b <new-feature-branch-name>``"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:45
msgid "Commit and push your changes to your forked ``lvgl`` repository."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:46
msgid "Create a PR on GitHub from the page of your forked ``lvgl`` repository (``https://github.com/<YOUR_NAME>/lvgl``) by clicking the *\"New pull request\"* button. Don't forget to select the branch where you added your changes."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:48
msgid "Set the base branch where you want to merge your update. In the ``lvgl`` repo both fixes and new features should be directed to the ``master`` branch."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:50
msgid "Describe what is in the update.  Example code is welcome if applicable."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:51
msgid "If you need to make more changes, just update your forked ``lvgl`` repo with new commits. They will automatically appear in the PR."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:59
msgid "Commit Message Format"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:61
msgid "The commit messages format is inspired by `Angular Commit Format <https://github.com/angular/angular/blob/main/CONTRIBUTING.md#commit>`__."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:64
msgid "The following structure should be used:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:74
msgid "Possible ``<type>``\\ s:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:76
msgid "``fix`` bugfix in LVGL source code"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:77
msgid "``feat`` new feature"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:78
msgid "``arch`` architectural changes"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:79
msgid "``perf`` changes that affect performance"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:80
msgid "``example`` anything related to examples (including fixes and new examples)"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:81
msgid "``docs`` anything related to documentation (including fixes, formatting, and new pages)"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:82
msgid "``test`` anything related to tests (new and updated tests or CI actions)"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:83
msgid "``chore`` any minor formatting or style changes that would make the changelog noisy"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:85
msgid "``<scope>`` is the name of the module, file, or subsystem affected by the commit. It's usually one word and can be chosen freely. For example ``img``, ``layout``, ``txt``, ``anim``. The scope can be omitted."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:89
msgid "``<subject>`` contains a short description of the change following these guidelines:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:91
msgid "use the imperative mood:  e.g. present tense \"change\", not \"changed\" nor \"changes\";"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:92
msgid "don't capitalize the first letter;"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:93
msgid "no period (``.``) at the end;"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:94
msgid "max 90 characters."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:96
msgid "``<body>`` optional and can be used to describe the details of this change."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:99
msgid "``<footer>`` shall contain:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:101
msgid "begin it with \"BREAKING CHANGE\" if the changes break the API;"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:102
msgid "reference to the GitHub issue or Pull Request if applicable. (See `Linking a pull request to an issue <https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/using-keywords-in-issues-and-pull-requests#linking-a-pull-request-to-an-issue>`__ for details.)"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/pull_requests.rst:106
msgid "Some examples:"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:5
msgid "Ways to Contribute"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:7
msgid "**Spread the Word**: Share your LVGL experience with friends or on social media to boost its visibility."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:8
msgid "**Star LVGL**   Give us a star on `GitHub <https://github.com/lvgl/lvgl>`__! It helps a lot to make LVGL more appealing for newcomers."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:9
msgid "**Report a Bug**: Open a `GitHub Issue <https://github.com/lvgl/lvgl/issues>`__ if something is not working."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:10
msgid "**Join Our** `Forum <https://forum.lvgl.io/>`__ : Meet fellow developers and discuss questions."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:11
msgid "**Tell Us Your Ideas**: If you feel something is missing from LVGL, we would love to hear about it in a `GitHub Issue <https://github.com/lvgl/lvgl/issues>`__"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:12
msgid "**Develop Features**: Help to design or develop a feature. See below."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:14
msgid "Mid- and large-scale issues are discussed in `Feature Planning <https://github.com/lvgl/lvgl/issues/new?assignees=&labels=&projects=&template=feat-planning.yml>`__ issues."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:16
msgid "An issue can be developed when all the questions in the issue template are answered and there are no objection from any core member."
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:18
msgid "We are using GitHub labels to show the state and attributes of the issues and Pull requests. If you are looking for contribution opportunities you can `Filter for these labels <https://github.com/lvgl/lvgl/labels>`__ :"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:21
msgid "``Simple``: Good choice to get started with an LVGL contribution"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:22
msgid "``PR needed``: We investigated the issue but it still needs to be implemented"
msgstr ""

#: ../../lvgl/docs/intermediate/contributing/ways_to_contribute.rst:23
msgid "``Review needed``: A Pull request is opened and it needs review/testing"
msgstr ""
