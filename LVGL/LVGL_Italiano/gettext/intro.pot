# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021-2025, LVGL Kft
# This file is distributed under the same license as the LVGL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: LVGL 9.4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-21 17:16+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../lvgl/docs/intermediate/intro/getting_started/examples.rst:4
msgid "Basic Examples"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/examples.rst:6
msgid "Below are several basic examples.  They include the application code that produces the Widget Tree needed to make LVGL render the examples shown.  Each example assumes LVGL has undergone normal initialization, meaning that a ``lv_display_t`` object was created and therefore has an :ref:`active_screen`."
msgstr ""

#: ../../lvgl/docs/intermediate/examples/get_started/index.rst:3
msgid "A very simple *hello world* label"
msgstr ""

#: ../../lvgl/docs/intermediate/examples/get_started/index.rst:9
msgid "A button with a label and react on click event"
msgstr ""

#: ../../lvgl/docs/intermediate/examples/get_started/index.rst:15
msgid "Create styles from scratch for buttons"
msgstr ""

#: ../../lvgl/docs/intermediate/examples/get_started/index.rst:20
msgid "Create a slider and write its value on a label"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/index.rst:5
msgid "Getting started"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:5
msgid "Learn the Basics"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:8
msgid "Overview"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:10
msgid "LVGL (Light and Versatile Graphics Library) is a free and open-source graphics library providing everything you need to create an embedded GUI with easy-to-use mobile-phone-like graphical elements, beautiful visual effects, and a low memory footprint."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:15
msgid "You can think of LVGL as a collection of C and H files that can be dropped into any project to add UI capabilities to the product."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:18
msgid "With the help of consistent and easy-to-learn API functions you can create widgets (buttons, sliders, charts, etc), style them, add events, layouts, or animations."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:21
msgid "Based on these settings LVGL will render an image (either by using its built-in software rendering engine or a GPU) and will call a callback function to show the rendered image on the display. This callback function is the main interface between LVGL and the display. Most of the porting-related work is focused on writing such a callback in an effective way."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:27
msgid "This chapter will show the basics to give an idea about how LVGL works and how it can be used. For more details about each feature visit that feature's dedicated documentation page."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:33
msgid "Basic Data Flow"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:35
msgid "**Driver Initialization**: It's the user's responsibility to set up the clock, timers, peripherals, etc."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:36
msgid "**Call lv_init()**: It initializes LVGL itself"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:37
msgid "**Create display and input devices**: Create display(s) (:cpp:type:`lv_display_t`) and input device(s)  (:cpp:type:`lv_indev_t`) and set up their callbacks"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:38
msgid "**Create the UI**: Call LVGL functions to create screens, widgets, styles, animations, events, etc."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:39
msgid "**Call lv_timer_handler() in a loop**: It handles all the LVGL-related tasks:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:41
msgid "refresh display(s),"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:42
msgid "read input devices,"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:43
msgid "fire events based on user input (and other things),"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:44
msgid "run any animations, and"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:45
msgid "run user-created timers."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:48
msgid "Integration example"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:50
msgid "This is just a brief example of how to add LVGL to a new project. For more details check out :ref:`adding_lvgl_to_your_project`."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:106
msgid "Displays"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:108
msgid "*Display* refers to the actual hardware. In order to connect LVGL to the hardware an :cpp:expr:`lv_display_t` object needs to be created and initialized."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:111
msgid "LVGL has built-in support for many :ref:`built-in drivers <drivers>`, but it's easy to initialize a display from scratch as well (as shown above)."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:114
msgid "LVGL also handles multiple displays at once."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:119
msgid "Screens"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:121
msgid "A *Screen* is an LVGL widget created on a *Display*. It's a logical container for other widgets. A display can have multiple screens, but there is always one active screen, which can be retrieved by using :cpp:expr:`lv_screen_active()`. It returns an `lv_obj_t *` pointer. See :ref:`active_screen` for more information."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:125
msgid "The most common way to create a screen is by creating a :ref:`Base widget <base_widget>` with a ``NULL`` parent. E.g."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:131
msgid "A screen can be loaded like this: :cpp:expr:`lv_screen_load(my_screen)`"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:136
msgid "Widgets"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:138
msgid "Widgets are the basic building blocks of the UI. For example: :ref:`lv_button`, :ref:`lv_slider`, :ref:`lv_dropdown`, :ref:`lv_chart`, etc."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:141
msgid "Widgets can be created dynamically by calling their respective create functions. The create function returns an ``lv_obj_t *`` pointer which can be used to configure the widget later."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:144
msgid "Each create function has a single ``parent`` argument that defines which widget the new one will be added to."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:146
msgid "For example:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:153
msgid "If a widget or screen is no longer needed, it can be removed by calling :cpp:expr:`lv_obj_delete(my_button1)`"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:156
msgid "To change the properties of widgets, two sets of functions can be used:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:158
msgid "``lv_obj_...()`` functions for common properties, e.g. :cpp:expr:`lv_obj_set_width()`, :cpp:expr:`lv_obj_add_style()`, etc. These are covered in :ref:`common_widget_features`."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:160
msgid "``lv_<widget_type>_...()`` functions for type-specific properties, e.g.  :cpp:expr:`lv_label_set_text()`, :cpp:expr:`lv_slider_set_value()`, etc."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:162
msgid "Here is an example that also shows some non-pixel units for sizes:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:177
msgid "To see the full API for any widget, see its documentation at :ref:`widgets`, or check its related header file in the source code."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:184
msgid "Events"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:186
msgid "Events are used to inform the application that something has happened with a Widget. You can assign one or more callbacks to a Widget which will be called when the Widget is clicked, released, dragged, being deleted, etc."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:190
msgid "A callback is assigned like this:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:203
msgid ":cpp:enumerator:`LV_EVENT_ALL` can be used instead of :cpp:enumerator:`LV_EVENT_CLICKED` to invoke the callback for all events."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:206
msgid "Event callbacks receive the argument :cpp:expr:`lv_event_t * e` containing the current event code and other event-related information. The current event code can be retrieved with:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:214
msgid "The Widget that triggered the event can be retrieved with:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:220
msgid "Learn all about Events in the :ref:`events` section."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:223
msgid "Parts and States"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:228
msgid "Parts"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:230
msgid "Widgets are built from one or more *parts*. For example, a button has only one part called :cpp:enumerator:`LV_PART_MAIN`. However, a :ref:`lv_slider` has :cpp:enumerator:`LV_PART_MAIN`, :cpp:enumerator:`LV_PART_INDICATOR` and :cpp:enumerator:`LV_PART_KNOB`."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:235
msgid "By using parts you can apply different :ref:`styles <basics_styles>` to the parts of a widget."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:238
msgid "Read the Widget's documentation to learn which parts it uses."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:243
msgid "States"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:245
msgid "Widgets can be in a combination of the following states:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:247
msgid ":cpp:enumerator:`LV_STATE_DEFAULT`: Normal, released state"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:248
msgid ":cpp:enumerator:`LV_STATE_CHECKED`: Toggled or checked state"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:249
msgid ":cpp:enumerator:`LV_STATE_FOCUSED`: Focused via keypad or encoder or clicked via touchpad/mouse"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:250
msgid ":cpp:enumerator:`LV_STATE_FOCUS_KEY`: Focused via keypad or encoder but not via touchpad/mouse"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:251
msgid ":cpp:enumerator:`LV_STATE_EDITED`: Edited by an encoder"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:252
msgid ":cpp:enumerator:`LV_STATE_HOVERED`: Hovered by mouse"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:253
msgid ":cpp:enumerator:`LV_STATE_PRESSED`: Being pressed"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:254
msgid ":cpp:enumerator:`LV_STATE_SCROLLED`: Being scrolled"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:255
msgid ":cpp:enumerator:`LV_STATE_DISABLED`: Disabled"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:257
msgid "For example, if you press a Widget it will automatically go to the :cpp:enumerator:`LV_STATE_FOCUSED` and :cpp:enumerator:`LV_STATE_PRESSED` states. When you release it, the :cpp:enumerator:`LV_STATE_PRESSED` state will be removed while the :cpp:enumerator:`LV_STATE_FOCUSED` state remains active."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:262
msgid "To check if a Widget is in a given state use :cpp:expr:`lv_obj_has_state(widget, LV_STATE_...)`. It will return ``true`` if the Widget is currently in that state."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:266
msgid "To programmatically add or remove states use:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:276
msgid "Styles"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:279
msgid "Initializing styles"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:281
msgid "Styles are carried in :cpp:struct:`lv_style_t` objects. They contain properties such as background color, border width, font, etc."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:284
msgid "The styles can be added to a widget's given :ref:`Part <basics_parts>` and :ref:`State <basics_states>`. Only their pointer is saved in the Widgets so they need to be defined as static or global variables."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:287
msgid "Before using a style it needs to be initialized with :cpp:expr:`lv_style_init(&style1)`. After that, properties can be added to configure the style. For example:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:297
msgid "See :ref:`style_properties_overview` for more details."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:299
msgid "See :ref:`style_properties` to see the full list."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:302
msgid "Adding styles to the widgets"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:304
msgid "After that it can be added to widgets:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:313
msgid "Inheritance"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:315
msgid "Some properties (particularly the text-related ones) can be inherited. This means if a property is not set in a Widget it will be searched for in its parents. For example, you can set the font once in the screen's style and all text on that screen will inherit it by default, unless the font is specified on the widget or one of its parents."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:322
msgid "Local styles"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:324
msgid "Local style properties also can be added to Widgets. This creates a style which resides inside the Widget and is used only by that Widget:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:331
msgid "See :ref:`styles` for full details."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:336
msgid "Subjects and Observers"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:338
msgid "Subjects and Observers are powerful tools to easily create data bindings."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:340
msgid "Subjects are global :cpp:expr:`lv_subject_t` variables that store integer, color, string, etc. values."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:342
msgid "Either the UI or the application can subscribe to these subjects by creating *observer callbacks* that are notified when the subject changes."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:345
msgid "A widget can also subscribe to a subject. This way, when the widget is deleted, it will be automatically unsubscribed."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:347
msgid "For some widgets, helper functions make it simple to connect them to subjects. E.g.: :cpp:expr:`lv_slider_bind_value()`, :cpp:expr:`lv_label_bind_text()`."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:350
msgid "In general, using subjects and observers is a way to connect various parts of the UI and make them dynamically react to application data changes—or allow the application to react to UI changes."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/learn_the_basics.rst:376
msgid "Learn more on the documentation page of :ref:`Observers <observer_how_to_use>`."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:5
msgid "What's Next?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:7
msgid "There are several good ways ways to gain deeper knowledge of LVGL.  Here is one recommended order of documents to read and things to play with while you are advancing your knowledge:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:11
msgid "If not already read, start with :ref:`introduction` page of the documentation.  (5 minutes)"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:13
msgid "Check out the `Online Demos`_ to see LVGL in action.  (3 minutes)"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:14
msgid "If not already done, read the :ref:`learn_the_basics` (above).  (15 minutes)"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:15
msgid "Set up an LVGL :ref:`simulator`.  (10 minutes)"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:16
msgid "Have a look at some :ref:`examples` and their code."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:17
msgid ":ref:`Add LVGL to your project <adding_lvgl_to_your_project>` or check out the `ready-to-use Projects`_."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:19
msgid "Read the :ref:`main_modules` pages to get a better understanding of the library. (2-3 hours)"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:20
msgid "Skim the documentation of :ref:`widgets` to see what is available."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:21
msgid "If you have questions go to the `Forum`_."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/getting_started/whats_next.rst:22
msgid "Read the :ref:`contributing` guide to see how you can help to improve LVGL. (15 minutes)"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:6
msgid "FAQ"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:9
msgid "Where can I ask questions?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:11
msgid "You can ask questions in the forum:  https://forum.lvgl.io/."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:13
msgid "We use `GitHub issues <https://github.com/lvgl/lvgl/issues>`_ for development related discussion. You should use them only if your question or issue is tightly related to the development of the library."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:16
msgid "Before posting a question, please read this FAQ section since you might find the answer to your issue here as well."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:20
msgid "Is my MCU/hardware supported?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:22
msgid "Every MCU which is capable of driving a display via parallel port, SPI, RGB interface or anything else and fulfills the :ref:`requirements` is supported by LVGL."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:24
msgid "This includes:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:26
msgid "\"Common\" MCUs like STM32F, STM32H, NXP Kinetis, LPC, iMX, dsPIC33, PIC32, SWM341 etc."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:27
msgid "Bluetooth, GSM, Wi-Fi modules like Nordic NRF, Espressif ESP32 and Raspberry Pi Pico W"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:28
msgid "Linux with frame buffer device such as /dev/fb0. This includes Single-board computers like the Raspberry Pi"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:29
msgid "Anything else with a strong enough MCU and a peripheral to drive a display"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:33
msgid "Is my display supported?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:35
msgid "LVGL needs just one simple driver function to copy an array of pixels into a given area of the display. If you can do this with your display then you can use it with LVGL."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:38
msgid "Some examples of the supported display types:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:40
msgid "TFTs with 16 or 24 bit color depth"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:41
msgid "Monitors with an HDMI port"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:42
msgid "Small monochrome displays"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:43
msgid "Gray-scale displays"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:44
msgid "even LED matrices"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:45
msgid "or any other display where you can control the color/state of the pixels"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:47
msgid "See the :ref:`display` section to learn more."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:51
msgid "LVGL doesn't start, randomly crashes or nothing is drawn on the display. What can be the problem?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:53
msgid "Try increasing :c:macro:`LV_MEM_SIZE`."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:54
msgid "Be sure your display works without LVGL. E.g. paint it to red on start up."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:55
msgid "Enable :ref:`logging`."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:56
msgid "Enable assertions in ``lv_conf.h`` (``LV_USE_ASSERT_...``)."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:57
msgid "If you use an RTOS:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:59
msgid "Increase the stack size of the task that calls :cpp:func:`lv_timer_handler`."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:60
msgid "Be sure you are using one of the methods for thread management as described in :ref:`threading`."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:64
msgid "My display driver is not called. What have I missed?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:66
msgid "Be sure you are calling :cpp:expr:`lv_tick_inc(x)` as prescribed in :ref:`tick_interface` and are calling :cpp:func:`lv_timer_handler` as prescribed in :ref:`timer_handler`."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:70
msgid "Learn more in the :ref:`tick_interface` and :ref:`timer_handler` sections."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:74
msgid "Why is the display driver called only once? Only the upper part of the display is refreshed."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:76
msgid "Be sure you are calling :cpp:expr:`lv_display_flush_ready(drv)` at the end of your \"*display flush callback*\" as per :ref:`flush_callback` section."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:81
msgid "Why do I see only garbage on the screen?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:83
msgid "There is probably a bug in your display driver. Try the following code without using LVGL.  You should see a square with red-blue gradient."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:105
msgid "Why do I see nonsense colors on the screen?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:107
msgid "The configured LVGL color format is probably not compatible with your display's color format.  Check :c:macro:`LV_COLOR_DEPTH` in *lv_conf.h*."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:112
msgid "How do I speed up my UI?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:114
msgid "Turn on compiler optimization and enable instruction- and data-caching if your MCU has them."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:115
msgid "Increase the size of the display buffer."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:116
msgid "Use two display buffers and flush the buffer with DMA (or similar peripheral) in the background."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:117
msgid "Increase the clock speed of the SPI or parallel port if you use them to drive the display."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:118
msgid "If your display has an SPI port consider changing to a model with a parallel interface because it has much higher throughput."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:119
msgid "Keep the display buffer in internal RAM (not in external SRAM) because LVGL uses it a lot and it should have fast access time."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:123
msgid "How do I reduce flash/ROM usage?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:125
msgid "You can disable unused features (such as animations, file system, GPU etc.) and widget types in *lv_conf.h*."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:127
msgid "If you are using GCC/CLANG you can add `-fdata-sections -ffunction-sections` compiler flags and `--gc-sections` linker flag to remove unused functions and variables from the final binary. If possible, add the `-flto` compiler flag to enable link-time-optimisation together with `-Os` for GCC or `-Oz` for CLANG and newer GCC versions."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:131
msgid "How do I reduce RAM usage?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:133
msgid "Lower the size of the *Display buffer*."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:134
msgid "Reduce :c:macro:`LV_MEM_SIZE` in *lv_conf.h*. This memory is used when you create Widgets like buttons, labels, etc."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:135
msgid "To work with lower :c:macro:`LV_MEM_SIZE` you can create Widgets only when required and delete them when they are not needed anymore."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:139
msgid "How do I use LVGL with an operating system?"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/faq.rst:141
msgid "To work with an operating system where tasks can interrupt each other (preemptively), you must ensure that no LVGL function call be called while another LVGL call is in progress.  There are several ways to do this.  See the :ref:`threading` section to learn more."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:5
msgid "Introduction"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:7
msgid "LVGL (Light and Versatile Graphics Library) is a free and open-source C graphics library providing everything you need to create an embedded GUI with easy-to-use graphical elements, beautiful visual effects, and a low memory footprint."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:11
msgid "LVGL provides the \"GUI engine\" that handles all end-user interaction with your application, including not only drawing the contents of the display and accepting user input and turning it into events \"catchable\" by the application, but also providing 30+ built-in widgets, 100+ style properties, scrolling, animations, advanced software rendering, built-in GPU support from MCUs to OpenGL, and much more. The combination of these enable you to efficiently develop UIs without having to re-invent the wheel."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:19
msgid "Using LVGL in a firmware project effectively reduces the GUI-developer's job to defining the GUI and furnishing it with appropriate event hooks to carry out the valuable work of the GUI."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:23
msgid "LVGL can use GUIs that are 100% defined in C code you write (for which any updates to the GUI require modifying that C code and re-flashing the firmware), or GUI definitions provided in XML files (for which updates to the GUI require only modifying the XML files that define the GUI for that firmware), or any combination of these two that suits your project."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:34
msgid "Key Features"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:36
msgid "Powerful building blocks such as :ref:`buttons, charts, lists, sliders, images <widgets>`, etc."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:37
msgid "Advanced graphics with animations, anti-aliasing, opacity, smooth scrolling"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:38
msgid "Various input devices such as touchpad, mouse, keyboard, encoder, etc."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:39
msgid "Multi-language support with UTF-8 encoding"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:40
msgid "Multi-display support, even with mixed color formats"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:41
msgid "Fully customizable graphic elements with CSS-like styles"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:42
msgid "Hardware independent:  use with any microcontroller or display"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:43
msgid "Scalable: able to operate with little memory (64 kB Flash, 16 kB RAM)"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:44
msgid ":ref:`OS <threading>`, external memory and :ref:`GPU <draw>` are supported but not required"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:45
msgid "Single frame buffer operation even with advanced graphic effects"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:46
msgid "Written in C for maximal compatibility (C++ compatible)"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:47
msgid ":ref:`Simulator <simulator>` to start embedded GUI design on a PC without embedded hardware"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:48
msgid "User code developed under simulator can be shared with firmware to make UI development more efficient."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:49
msgid "Binding to :ref:`MicroPython`"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:50
msgid "Tutorials, examples, themes for rapid GUI design"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:51
msgid "Documentation is available online"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:52
msgid "Free and open-source under MIT license"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/index.rst:53
msgid "Free for commercial projects"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/license.rst:5
msgid "License"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/license.rst:7
msgid "The LVGL project (including all repositories) is licensed under the `MIT license <https://github.com/lvgl/lvgl/blob/master/LICENCE.txt>`__.  This means you can use it even in commercial projects."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/license.rst:11
msgid "It is not mandatory, but we highly appreciate it if you write a few words about your project in the `My projects <https://forum.lvgl.io/c/my-projects/10>`__ category of the forum or a private message to `lvgl.io <https://lvgl.io/#contact>`__."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/license.rst:15
msgid "Although you can get LVGL for free there is a massive amount of work behind it.  It's created by a group of volunteers who made it available for you in their free time."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/license.rst:18
msgid "To make the LVGL project sustainable, please consider :ref:`contributing` to the project.  You can choose from many different ways of contributing.  See :ref:`contributing` such as simply writing a tweet about you using LVGL, fixing bugs, translating the documentation, or even becoming a maintainer."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:5
msgid "The LVGL Repository"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:9
msgid "Repository layout"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:11
msgid "All repositories of the LVGL project are hosted on `GitHub <https://github.com/lvgl>`_."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:13
msgid "You will find these repositories there:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:15
msgid "`lvgl <https://github.com/lvgl/lvgl>`__: The library itself with many `examples <https://github.com/lvgl/lvgl/blob/master/examples/>`_ and `demos <https://github.com/lvgl/lvgl/blob/master/demos/>`__."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:16
msgid "`blog <https://github.com/lvgl/blog>`__: Source of the `blog's site <https://blog.lvgl.io>`__"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:17
msgid "`sim <https://github.com/lvgl/sim>`__: Source of the `online simulator's site <https://sim.lvgl.io>`__"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:18
msgid "`lv_port_* <https://github.com/lvgl?q=lv_port&type=&language=>`__: LVGL ports to development boards or environments"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:19
msgid "`lv_binding_* <https://github.com/lvgl?q=lv_binding&type=&language=l>`__: Bindings to other languages"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:23
msgid "Release policy"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:26
msgid "The core repositories follow the rules of `Semantic Versioning <https://semver.org/>`__:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:28
msgid "Major version: incompatible API changes. E.g. v5.0.0, v6.0.0"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:29
msgid "Minor version: new but backward-compatible functionalities. E.g. v6.1.0, v6.2.0"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:30
msgid "Patch version: backward-compatible bug fixes. E.g. v6.1.1, v6.1.2"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:32
msgid "Tags like `vX.Y.Z` are created for every release."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:36
msgid "Release cycle"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:38
msgid "Bug fixes: released on demand even weekly"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:39
msgid "Minor releases: every 3-4 months"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:40
msgid "Major releases: approximately yearly"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:44
msgid "Branches"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:47
msgid "The core repositories have at least the following branches:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:49
msgid "`master`: latest version, patches are merged directly here"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:50
msgid "`release/vX.Y`: stable versions of the minor releases"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:54
msgid "Change log"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:56
msgid "The changes are recorded in :ref:`changelog`."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:60
msgid "Version support"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:63
msgid "Before v8 the last minor release of each major series was supported for 1 year. Starting from v8, every minor release is supported for 1 year."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:68
msgid "Version"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:68
msgid "Release date"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:68
msgid "Support end"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:68
msgid "Active"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:70
msgid "v5.3"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:70
msgid "1 Feb, 2019"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:70
msgid "1 Feb, 2020"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:70
#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:72
#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:74
#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:76
#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:78
#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:80
#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:82
#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:84
#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:86
#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:88
msgid "No"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:72
msgid "v6.1"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:72
msgid "26 Nov, 2019"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:72
msgid "26 Nov, 2020"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:74
msgid "v7.11"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:74
msgid "16 Mar, 2021"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:74
msgid "16 Mar, 2022"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:76
msgid "v8.0"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:76
msgid "1 Jun, 2021"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:76
msgid "1 Jun, 2022"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:78
msgid "v8.1"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:78
msgid "10 Nov, 2021"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:78
msgid "10 Nov, 2022"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:80
msgid "v8.2"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:80
msgid "31 Jan, 2022"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:80
msgid "31 Jan, 2023"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:82
msgid "v8.3"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:82
msgid "6 July, 2022"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:82
msgid "1 Jan, 2025"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:84
msgid "v8.4"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:84
msgid "19 Mar, 2024"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:84
#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:88
msgid "20 Mar, 2025"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:86
msgid "v9.0"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:86
msgid "22 Jan, 2024"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:86
msgid "22 Jan, 2025"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:88
msgid "v9.1"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:88
msgid "20 Mar, 2024"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:90
msgid "v9.2"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:90
msgid "26 Aug, 2024"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:90
msgid "26 Aug, 2025"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:90
#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:92
msgid "Yes"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:92
msgid "v9.3"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:92
msgid "3 June, 2025"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/repo.rst:92
msgid "3 June, 2026"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:5
msgid "Requirements"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:7
msgid "Basically, every modern controller which is able to drive a display is suitable to run LVGL.  The minimal requirements are:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:10
msgid "16, 32 or 64 bit microcontroller or processor"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:11
msgid "> 16 MHz clock speed is recommended"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:12
msgid "Flash/ROM: > 64 kB for the very essential components (> 180 kB is recommended)"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:13
msgid "RAM:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:15
msgid "Static RAM usage: ~2 kB depending on the used features and Widget types"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:16
msgid "stack: > 2kB (> 8 kB recommended)"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:17
msgid "Dynamic data (heap): > 2 KB (> 48 kB is recommended if using many GUI Widgets). Set by :c:macro:`LV_MEM_SIZE` in ``lv_conf.h``."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:19
msgid "Display buffer:  > *\"Horizontal resolution\"* pixels (> 10 X *\"Horizontal resolution\"* is recommended)"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:20
msgid "One frame buffer in the MCU or in an external display controller"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:22
msgid "C99 or newer compiler"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:23
msgid "Basic C (or C++) knowledge:"
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:25
msgid "`pointers <https://www.tutorialspoint.com/cprogramming/c_pointers.htm>`__."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:26
msgid "`structs <https://www.tutorialspoint.com/cprogramming/c_structures.htm>`__."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:27
msgid "`callbacks <https://www.geeksforgeeks.org/callbacks-in-c/>`__."
msgstr ""

#: ../../lvgl/docs/intermediate/intro/introduction/requirements.rst:30
msgid "*Memory usage may vary depending on architecture, compiler and build options.*"
msgstr ""
